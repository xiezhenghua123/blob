(window.webpackJsonp=window.webpackJsonp||[]).push([[20],{554:function(t,_,v){t.exports=v.p+"assets/img/image-20210722153043670.936b363e.png"},555:function(t,_,v){t.exports=v.p+"assets/img/image-20210722153143708.a6beacbb.png"},556:function(t,_,v){t.exports=v.p+"assets/img/image-20210722153314307.e00f91c8.png"},557:function(t,_,v){t.exports=v.p+"assets/img/image-20210722153424168.1f4473fb.png"},558:function(t,_,v){t.exports=v.p+"assets/img/image-20210722153451965.1e665d6f.png"},588:function(t,_,v){"use strict";v.r(_);var a=v(1),e=Object(a.a)({},(function(){var t=this,_=t._self._c;return _("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[_("h3",{attrs:{id:"前言"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#前言"}},[t._v("#")]),t._v(" "),_("strong",[t._v("前言")])]),t._v(" "),_("p",[t._v("这个问题是前端面试的一个经典问题，你吃透了它，基本能掌握前端的大部分知识，经过对这个问题长时间的探索，我终于稍微理解了它，不容易啊。")]),t._v(" "),_("h3",{attrs:{id:"过程"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#过程"}},[t._v("#")]),t._v(" "),_("strong",[t._v("过程")])]),t._v(" "),_("p",[t._v("整个过程主要分为以下步骤：")]),t._v(" "),_("ol",[_("li",[t._v("浏览器的地址栏输入 url 并按下回车")]),t._v(" "),_("li",[t._v("浏览器会根据你的 url 查看浏览器是否有缓存（DNS域名缓存），并且对比过期时间")]),t._v(" "),_("li",[t._v("DNS 根据 url 解析出 ip 地址，并且找到端口号")]),t._v(" "),_("li",[t._v("三次握手建立连接")]),t._v(" "),_("li",[t._v("浏览器发起 http 请求（这里也会查缓存，有可能强缓存，也有可能协商缓存）")]),t._v(" "),_("li",[t._v("服务器接收到请求并处理，浏览器收到 http 响应")]),t._v(" "),_("li",[t._v("进行页面渲染，构建 DOM 树，CSS 树等")]),t._v(" "),_("li",[t._v("四次挥手断开连接。")])]),t._v(" "),_("p",[t._v("接下来对其中的一些步骤展开细说。")]),t._v(" "),_("h3",{attrs:{id:"url-构成"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#url-构成"}},[t._v("#")]),t._v(" "),_("strong",[t._v("URL 构成")])]),t._v(" "),_("p",[t._v("我们常见的 URL 是这样的**😗*http://www.baidu.com,这个域名由三部分组成：协议名、域名、端口号，这里端口是默认所以隐藏。除此之外URL还会包含一些路径、查询和其他片段，例如：http://www.tuicool.com/search?kw=%E4%。我们最常见的的协议是HTTP协议，除此之外还有加密的HTTPS协议、FTP协议、FILe协议等等。URL的中间部分为域名或者是IP，之后就是端口号了。通常端口号不常见是因为大部分的都是使用默认端口，如HTTP默认端口80，HTTPS默认端口443。")]),t._v(" "),_("h3",{attrs:{id:"缓存"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#缓存"}},[t._v("#")]),t._v(" "),_("strong",[t._v("缓存")])]),t._v(" "),_("p",[t._v("浏览器缓存根据是否需要"),_("strong",[t._v("重新向服务器发起请求")]),t._v("总共分为两类：强缓存和协商缓存。")]),t._v(" "),_("p",[_("strong",[t._v("强缓存（不需要）对应的 HTTP 首部字段")]),t._v("：cache-control，Expires。")]),t._v(" "),_("p",[t._v("Expires：是一个绝对时间，即服务器时间。浏览器检查当前时间，如果还没到失效时间就直接使用缓存文件。但是该方法存在一个问题：服务器时间与客户端（本地时间）时间可能不一致。因此该字段已经很少使用。（这个字段需要和 Last-modified 结合使用。Expires 是 Web 服务器响应消息头字段，在响应 http 请求时告诉浏览器在过期时间前浏览器可以直接从浏览器缓存取数据，而无需再次请求。）")]),t._v(" "),_("p",[t._v("cache-control：这个字段中有一个指令 max-age，可以保存相对时间。")]),t._v(" "),_("p",[t._v("如果同时存在 cache-control 和 Expires，浏览器总是优先使用 cache-control。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(554),alt:"image-20210722153043670"}})]),t._v(" "),_("p",[_("strong",[t._v("协商缓存（需要）对应的 HTTP 两组字段")]),t._v("：If-since-modified 和 last-modified、if-none-match 和 Etag")]),t._v(" "),_("p",[t._v("If-since-modified 和 last-modified：发送 HTTP 请求时携带 If-since-modified 字段，服务端收到请求时将这个字段的时间和服务器最后内容更新的时间进行对比，如果在在有效期内，则返回 304 状态码，告诉浏览器可以使用缓存。如果内容更新了，则返回 200 状态码，进行数据更新，并且 http 响应头携带最新的 last-modified 时间值返回。这组字段会存在一定的弊端，因为是根据文件修改时间来判定是否更新的，如果修改了文件，但内容没变，服务器的 last-modified 还是会更新。")]),t._v(" "),_("p",[t._v("if-none-match 和 Etag：流程和上面的 last-modified 一样，只是 Etag 值是根据文件内容是否修改来进行判定，进行产生一个哈希字符串存在服务器的 Etag 中。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(555),alt:""}})]),t._v(" "),_("h3",{attrs:{id:"dns-解析"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#dns-解析"}},[t._v("#")]),t._v(" "),_("strong",[t._v("DNS 解析")])]),t._v(" "),_("p",[t._v("我们知道在地址栏输入的域名并不是最后资源所在的真实位置，域名只是与 IP 地址的一个映射。网络服务器的 IP 地址那么多，我们不可能去记一串串的数字，因此域名就产生了，域名解析的过程实际是将域名还原为 IP 地址的过程。")]),t._v(" "),_("ul",[_("li",[t._v("首先浏览器先检查本地 hosts 文件是否有这个网址映射关系，如果有就调用这个 IP 地址映射，完成域名解析。")]),t._v(" "),_("li",[t._v("如果没找到则会查找本地 DNS 解析器缓存，如果查找到则返回。")]),t._v(" "),_("li",[t._v("如果还是没有找到则会查找本地 DNS 服务器（一般采用递归查询），如果查找到则返回。")]),t._v(" "),_("li",[t._v("DNS本地域名服务器向根域名服务器查询（一般采用迭代查询），按根域服务器 ->顶级域->第二层域 → 子域，找到 IP 地址。")])]),t._v(" "),_("p",[t._v("迭代查询：主机向本地DNS服务器查询ip的过程中，本地DNS服务器通过递归，只会向主机返回ip地址或者未查询到的信息。")]),t._v(" "),_("p",[t._v("递归查询：本地DNS服务向根DNS服务器查询过程中，根DNS会向本地DNS服务器返回ip地址或者返回本地域名服务服务器下一步需要访问哪个DNS服务器的指示。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(556),alt:"image-20210722153314307"}})]),t._v(" "),_("h3",{attrs:{id:"tcp-三次握手建立连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#tcp-三次握手建立连接"}},[t._v("#")]),t._v(" "),_("strong",[t._v("TCP 三次握手建立连接")])]),t._v(" "),_("p",[t._v("第一次握手：客户端向服务端发送请求，说：“我的序列号是 a1，想和你建立连接，你同意的话就回个确认消息 b 吧。”")]),t._v(" "),_("p",[t._v("第二次握手：服务端向客户端回应消息，说：’好的，收到，回你个确认消息 b，我的序列号是 a2，你想连接就回个消息 d 吧“。")]),t._v(" "),_("p",[t._v("第三次握手：客户端收到服务端消息并回应，说：”收到，回你个消息 d“")]),t._v(" "),_("p",[t._v("连接建立。")]),t._v(" "),_("h3",{attrs:{id:"浏览器向服务器发送-http-请求并接收到响应"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#浏览器向服务器发送-http-请求并接收到响应"}},[t._v("#")]),t._v(" "),_("strong",[t._v("浏览器向服务器发送 HTTP 请求并接收到响应")])]),t._v(" "),_("p",[t._v("完整的 HTTP 请求包含请求起始行、请求头部、请求主体三部分。")]),t._v(" "),_("p",[t._v("服务器在收到浏览器发送的 HTTP 请求之后，会将收到的 HTTP 报文封装成 HTTP 的 Request 对象，并通过不同的 Web 服务器进行处理，处理完的结果以 HTTP 的 Response 对象返回，主要包括状态码，响应头，响应报文三个部分。")]),t._v(" "),_("p",[_("img",{attrs:{src:v(557),alt:"image-20210722153424168"}})]),t._v(" "),_("h3",{attrs:{id:"页面渲染"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#页面渲染"}},[t._v("#")]),t._v(" "),_("strong",[t._v("页面渲染")])]),t._v(" "),_("p",[t._v("浏览器渲染页面的过程总共分 5 步：")]),t._v(" "),_("ul",[_("li",[t._v("浏览器将获取的 HTML 文档解析成 DOM 树。")]),t._v(" "),_("li",[t._v("处理 CSS 标记，构成层叠样式表模型 CSSOM(CSS Object Model)。")]),t._v(" "),_("li",[t._v("将 DOM 和 CSSOM 合并为渲染树("),_("code",[t._v("rendering tree")]),t._v(")，代表一系列将被渲染的对象。")]),t._v(" "),_("li",[t._v("渲染树的每个元素包含的内容都是计算过的，它被称之为布局"),_("code",[t._v("layout")]),t._v("。浏览器使用一种流式处理的方法，只需要一次绘制操作就可以布局所有的元素。")]),t._v(" "),_("li",[t._v("将渲染树的各个节点绘制到屏幕上，这一步被称为绘制"),_("code",[t._v("painting")]),t._v("。")])]),t._v(" "),_("p",[_("img",{attrs:{src:v(558),alt:"image-20210722153451965"}})]),t._v(" "),_("p",[t._v("需要注意的是，以上五个步骤并不一定一次性顺序完成，比如 DOM 或 CSSOM 被修改时，亦或是哪个过程会重复执行，这样才能计算出哪些像素需要在屏幕上进行重新渲染。")]),t._v(" "),_("p",[t._v("在实际情况中，JavaScript 和 CSS 的某些操作往往会多次修改 DOM 或者 CSSOM，从而导致"),_("strong",[t._v("重绘")]),t._v("和"),_("strong",[t._v("重排")]),t._v("等性能问题，要尽量避免。")]),t._v(" "),_("p",[t._v("**关于 js 阻塞：**JS 可以操作 DOM 来修改 DOM 结构，可以操作 CSSOM 来修改节点样式，这就导致了浏览器在遇到"),_("code",[t._v("<script>")]),t._v("标签时，DOM 构建将暂停，直至脚本完成执行，然后继续构建 DOM。如果脚本是外部的，会等待脚本下载完毕，再继续解析文档。现在可以在"),_("code",[t._v("script")]),t._v("标签上增加属性"),_("code",[t._v("defer")]),t._v("或者"),_("code",[t._v("async")]),t._v("。脚本解析会将脚本中改变 DOM 和 CSS 的地方分别解析出来，追加到 DOM 树和 CSSOM 规则树上。")]),t._v(" "),_("h3",{attrs:{id:"四次挥手-断开连接"}},[_("a",{staticClass:"header-anchor",attrs:{href:"#四次挥手-断开连接"}},[t._v("#")]),t._v(" "),_("strong",[t._v("四次挥手，断开连接")])]),t._v(" "),_("p",[t._v("第一次挥手：客户端向服务器发消息，说：’我没有数据要发送了，希望断开连接，如果同意就回复个消息 m”")]),t._v(" "),_("p",[t._v("第二次挥手：服务端向客户端发消息，说：‘收到，回你个消息 m’，消息发完之后，服务端在查数据是不是全部发完了。")]),t._v(" "),_("p",[t._v("第三次挥手：服务端向客户端发消息，说：‘我也没有数据要发送了，要断开连接了，同意就回个消息 n“")]),t._v(" "),_("p",[t._v("第四次挥手：客户端向服务端发消息，说：’收到，回你个消息 n‘。")]),t._v(" "),_("p",[t._v("断开连接。")]),t._v(" "),_("p",[t._v("参考文章："),_("a",{attrs:{href:"https://www.cnblogs.com/liutianzeng/p/10456865.html",target:"_blank",rel:"noopener noreferrer"}},[t._v("输入 url 经历了什么"),_("OutboundLink")],1),t._v("、"),_("a",{attrs:{href:"https://blog.csdn.net/weixin_39307273/article/details/104918716",target:"_blank",rel:"noopener noreferrer"}},[t._v("页面渲染过程"),_("OutboundLink")],1),t._v("、"),_("a",{attrs:{href:"https://juejin.cn/post/6844903593275817998",target:"_blank",rel:"noopener noreferrer"}},[t._v("浏览器缓存机制"),_("OutboundLink")],1)])])}),[],!1,null,null,null);_.default=e.exports}}]);