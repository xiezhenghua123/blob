if(!self.define){const e=e=>{"require"!==e&&(e+=".js");let s=Promise.resolve();return a[e]||(s=new Promise((async s=>{if("document"in self){const a=document.createElement("script");a.src=e,document.head.appendChild(a),a.onload=s}else importScripts(e),s()}))),s.then((()=>{if(!a[e])throw new Error(`Module ${e} didnâ€™t register its module`);return a[e]}))},s=(s,a)=>{Promise.all(s.map(e)).then((e=>a(1===e.length?e[0]:e)))},a={require:Promise.resolve(s)};self.define=(s,i,r)=>{a[s]||(a[s]=Promise.resolve().then((()=>{let a={};const c={uri:location.origin+s.slice(1)};return Promise.all(i.map((s=>{switch(s){case"exports":return a;case"module":return c;default:return e(s)}}))).then((e=>{const s=r(...e);return a.default||(a.default=s),a}))})))}}define("./service-worker.js",["./workbox-c81aca33"],(function(e){"use strict";e.setCacheNameDetails({prefix:"mr-hope"}),self.addEventListener("message",(e=>{e.data&&"SKIP_WAITING"===e.data.type&&self.skipWaiting()})),e.clientsClaim(),e.precacheAndRoute([{url:"assets/css/0.styles.e7b730d7.css",revision:"9d696421e116d135964fae11f37f2c25"},{url:"assets/img/danger-dark.7b1d6aa1.svg",revision:"7b1d6aa1bdcf013d0edfe316ab770f8e"},{url:"assets/img/danger.b143eda2.svg",revision:"b143eda243548a9982491dca4c81eed5"},{url:"assets/img/default-skin.b257fa9c.svg",revision:"b257fa9c5ac8c515ac4d77a667ce2943"},{url:"assets/img/info-dark.f8a43cf6.svg",revision:"f8a43cf67fa96a27a078530a3a43253c"},{url:"assets/img/info.88826912.svg",revision:"88826912d81d91c9e2d03164cd1481a1"},{url:"assets/img/search.83621669.svg",revision:"83621669651b9a3d4bf64d1a670ad856"},{url:"assets/img/tip-dark.075a244c.svg",revision:"075a244c83d1403c167defe81b4d7fe7"},{url:"assets/img/tip.a2b80aa5.svg",revision:"a2b80aa50b769a26da12fe352322a657"},{url:"assets/img/warning-dark.aac7e30c.svg",revision:"aac7e30c5fafc6748e21f7a9ef546698"},{url:"assets/img/warning.ec428b6d.svg",revision:"ec428b6d6d45ac5d0c610f08d757f40f"},{url:"assets/js/12.3e3c98ca.js",revision:"714f71bf9dea27057774277495f8141c"},{url:"assets/js/app.a1dcb6a0.js",revision:"038abfb259456dc3ea878bb03927ea2b"},{url:"assets/js/layout-Blog.a675cfe2.js",revision:"97a6881b7cb6350d94b0db37c57714c7"},{url:"assets/js/layout-Layout.861bd358.js",revision:"89b2e64c9bc791b67e7610381678b7ca"},{url:"assets/js/layout-NotFound.cef323d6.js",revision:"f19d5253b352a7e545aa4b91cbe57bee"},{url:"assets/js/layout-Slide.e3cb0596.js",revision:"5af8afb778ce8aa3258527fb90b0c240"},{url:"assets/js/page--0af55a62.59ad65b1.js",revision:"96421c7aa4e86de45730477c9014988b"},{url:"assets/js/page--29cb792c.17d1934a.js",revision:"2c39f9473ed1bb6919c7b5a090c1ea47"},{url:"assets/js/vendors~layout-Blog~layout-Layout~layout-NotFound.c665fa3c.js",revision:"4e5cdcd1562a29ed28a62f0d9139c1c6"},{url:"assets/js/vendors~layout-Blog~layout-Layout~layout-NotFound~layout-Slide.bd9b9790.js",revision:"3b23f3302cbc4f665450497baa2cdfab"},{url:"assets/js/vendors~layout-Layout.5cc95599.js",revision:"5e9fdfc4d16ce17d74269adbf58c3bf8"},{url:"assets/js/vendors~photo-swipe.aa5d4c6a.js",revision:"5c1f1e7ac275ac5205da634e8f2e662b"},{url:"assets/fonts/element-icons.535877f5.woff",revision:"535877f50039c0cb49a6196a5b7517cd"},{url:"assets/fonts/element-icons.732389de.ttf",revision:"732389ded34cb9c52dd88271f1345af9"},{url:"404.html",revision:"42ce2be74b773985ee3675f8834c302d"},{url:"article/array/index.html",revision:"d3c60d91e7b436c3253c5e6d1031e495"},{url:"article/index.html",revision:"6813d184ad43a612e1bbd7e62f81439f"},{url:"category/index.html",revision:"af1fdb2a332a5b4c9367e1e3e32d45a3"},{url:"encrypt/index.html",revision:"4830e4a7d59837fe1332e7bfc9f2fbe8"},{url:"index.html",revision:"3a81d3e9a82e9f668132660ed2e0d566"},{url:"slide/index.html",revision:"287c14f770b821264ecafccd634df2d7"},{url:"star/index.html",revision:"0022182136602b07464694768ab7f5d0"},{url:"tag/index.html",revision:"6f2b89779a0e2ab614d8931594a5bba0"},{url:"timeline/index.html",revision:"f4e4f0c43233ef9f9be915c69ca75f44"}],{}),e.cleanupOutdatedCaches()}));
//# sourceMappingURL=service-worker.js.map
addEventListener("message", (event) => {
  const replyPort = event.ports[0];
  const message = event.data;
  if (replyPort && message && message.type === "skip-waiting")
    event.waitUntil(
      self.skipWaiting().then(
        () => replyPort.postMessage({ error: null }),
        (error) => replyPort.postMessage({ error })
      )
    );
});
